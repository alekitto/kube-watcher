name: Build images
on:
  push:
    branches:
      - main

jobs:
  build_docker:
    name: Build docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Check install!
        run: cosign version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        name: Extract docker image metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            latest
            type=sha
            type=sha,format=long

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup CRANE
        uses: imjasonh/setup-crane@v0.4

      - name: Flatten and sign images
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: |
          for tag in ${TAGS}; do
            crane flatten "${tag}"
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}

  build-helm-chart:
    name: Build and publish Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Push Helm chart to OCI compatible registry (Github)
        uses: bsord/helm-push@v4
        with:
          useOCIRegistry: true
          registry-url: oci://ghcr.io/${{ github.repository }}
          username: ${{ github.actor }}
          access-token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          chart-folder: chart